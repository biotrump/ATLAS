include Make.inc

aobj=              # later this empty def will be overridden by
include atomic.inc # this include, which is generated by probing system
mySRCdir = $(SRCdir)/src/threads
dep = $(INCSdir)/atlas_misc.h $(INCAdir)/atlas_pthreads.h \
      $(INCSdir)/atlas_threads.h

obj = $(aobj) ATL_GetAtomicCount.o ATL_setmyaffinity.o \
      ATL_FreeGlobalAtomicCountDown.o ATL_DecGlobalAtomicCountDown.o \
      ATL_SetGlobalAtomicCountDown.o ATL_FreeGlobalAtomicCount.o \
      ATL_GetGlobalAtomicCount.o ATL_DecGlobalAtomicCount.o \
      ATL_ResetGlobalAtomicCount.o ATL_SetGlobalAtomicCount.o \
      ATL_threadpool_misc.o ATL_threadpool.o ATL_IsFirstThreadedCall.o \
      ATL_thread_yield.o ATL_mutex_free.o ATL_mutex_trylock.o \
      ATL_mutex_unlock.o ATL_mutex_lock.o ATL_mutex_init.o ATL_cond_signal.o \
      ATL_cond_free.o ATL_cond_wait.o ATL_cond_init.o ATL_cond_bcast.o \
      ATL_goparallel.o ATL_thread_start.o ATL_thread_exit.o ATL_thread_join.o

all : lib
lib : lib.grd l3thr l2thr
slib2 : lib.grd $(sextthr)
	cd blas/level2 ; $(MAKE) slib
slib3 : lib.grd $(sextthr)
	cd blas/level3 ; $(MAKE) slib
clib2 : lib.grd $(cextthr)
	cd blas/level2 ; $(MAKE) clib
clib3 : lib.grd $(cextthr)
	cd blas/level3 ; $(MAKE) clib
dlib2 : lib.grd $(dextthr)
	cd blas/level2 ; $(MAKE) dlib
dlib3 : lib.grd $(dextthr)
	cd blas/level3 ; $(MAKE) dlib
zlib2 : lib.grd $(zextthr)
	cd blas/level2 ; $(MAKE) zlib
zlib3 : lib.grd $(zextthr)
	cd blas/level3 ; $(MAKE) zlib
killaobj:
	- rm -f $(aobj)
	- ar d $(ATLASlib) $(aobj)

lib.grd : $(obj)
	$(ARCHIVER) $(ARFLAGS) $(ATLASlib) $(obj)
	$(RANLIB) $(ATLASlib)
	touch lib.grd
l2thr: dlib2 zlib2 clib2 slib2
l3thr: dlib3 zlib3 clib3 slib3

ATL_ResetAtomicCount_mips.o : $(mySRCdir)/ATL_ResetAtomicCount_mips.S
	$(GOODGCC) $(CDEFS) -o $@ -c $(mySRCdir)/ATL_ResetAtomicCount_mips.S
ATL_DecAtomicCount_mips.o : $(mySRCdir)/ATL_DecAtomicCount_mips.S
	$(GOODGCC) $(CDEFS) -o $@ -c $(mySRCdir)/ATL_DecAtomicCount_mips.S
ATL_ResetAtomicCount_ppc.o : $(mySRCdir)/ATL_ResetAtomicCount_ppc.S
	$(GOODGCC) $(CDEFS) -o $@ -c $(mySRCdir)/ATL_ResetAtomicCount_ppc.S
ATL_DecAtomicCount_ppc.o : $(mySRCdir)/ATL_DecAtomicCount_ppc.S
	$(GOODGCC) $(CDEFS) -o $@ -c $(mySRCdir)/ATL_DecAtomicCount_ppc.S
ATL_ResetAtomicCount_sparc.o : $(mySRCdir)/ATL_ResetAtomicCount_sparc.S
	$(GOODGCC) $(CDEFS) -o $@ -c $(mySRCdir)/ATL_ResetAtomicCount_sparc.S
ATL_DecAtomicCount_sparc.o : $(mySRCdir)/ATL_DecAtomicCount_sparc.S
	$(GOODGCC) $(CDEFS) -o $@ -c $(mySRCdir)/ATL_DecAtomicCount_sparc.S
ATL_ResetAtomicCount_ia32.o : $(mySRCdir)/ATL_ResetAtomicCount_ia32.S
	$(GOODGCC) $(CDEFS) -o $@ -c $(mySRCdir)/ATL_ResetAtomicCount_ia32.S
ATL_DecAtomicCount_ia32.o : $(mySRCdir)/ATL_DecAtomicCount_ia32.S
	$(GOODGCC) $(CDEFS) -o $@ -c $(mySRCdir)/ATL_DecAtomicCount_ia32.S
ATL_ResetAtomicCount_win64.o : $(mySRCdir)/ATL_ResetAtomicCount_win64.S
	$(GOODGCC) $(CDEFS) -o $@ -c $(mySRCdir)/ATL_ResetAtomicCount_win64.S
ATL_DecAtomicCount_win64.o : $(mySRCdir)/ATL_DecAtomicCount_win64.S
	$(GOODGCC) $(CDEFS) -o $@ -c $(mySRCdir)/ATL_DecAtomicCount_win64.S
ATL_ResetAtomicCount_amd64.o : $(mySRCdir)/ATL_ResetAtomicCount_amd64.S
	$(GOODGCC) $(CDEFS) -o $@ -c $(mySRCdir)/ATL_ResetAtomicCount_amd64.S
ATL_DecAtomicCount_amd64.o : $(mySRCdir)/ATL_DecAtomicCount_amd64.S
	$(GOODGCC) $(CDEFS) -o $@ -c $(mySRCdir)/ATL_DecAtomicCount_amd64.S

ATL_dyntlaunch.o : $(dep) $(INCAdir)/atlas_taffinity.h $(mySRCdir)/ATL_dyntlaunch.c
	$(KC) $(KCFLAGS) -o $@ -c $(mySRCdir)/ATL_dyntlaunch.c
ATL_log2tlaunch.o : $(dep) $(INCAdir)/atlas_taffinity.h $(mySRCdir)/ATL_log2tlaunch.c
	$(KC) $(KCFLAGS) -o $@ -c $(mySRCdir)/ATL_log2tlaunch.c
ATL_lin0tlaunch.o : $(dep) $(INCAdir)/atlas_taffinity.h $(mySRCdir)/ATL_lin0tlaunch.c
	$(KC) $(KCFLAGS) -o $@ -c $(mySRCdir)/ATL_lin0tlaunch.c
ATL_GetAtomicCount.o : $(dep) $(mySRCdir)/ATL_GetAtomicCount.c
	$(KC) $(KCFLAGS) -o $@ -c $(mySRCdir)/ATL_GetAtomicCount.c
ATL_FreeAtomicCount_arch.o : $(dep) $(mySRCdir)/ATL_FreeAtomicCount_arch.c
	$(KC) $(KCFLAGS) -o $@ -c $(mySRCdir)/ATL_FreeAtomicCount_arch.c
ATL_SetAtomicCount_arch.o : $(dep) $(mySRCdir)/ATL_SetAtomicCount_arch.c
	$(KC) $(KCFLAGS) -o $@ -c $(mySRCdir)/ATL_SetAtomicCount_arch.c
ATL_FreeAtomicCount_mut.o : $(dep) $(mySRCdir)/ATL_FreeAtomicCount_mut.c
	$(KC) $(KCFLAGS) -o $@ -c $(mySRCdir)/ATL_FreeAtomicCount_mut.c
ATL_ResetAtomicCount_mut.o : $(dep) $(mySRCdir)/ATL_ResetAtomicCount_mut.c
	$(KC) $(KCFLAGS) -o $@ -c $(mySRCdir)/ATL_ResetAtomicCount_mut.c
ATL_DecAtomicCount_mut.o : $(dep) $(mySRCdir)/ATL_DecAtomicCount_mut.c
	$(KC) $(KCFLAGS) -o $@ -c $(mySRCdir)/ATL_DecAtomicCount_mut.c
ATL_SetAtomicCount_mut.o : $(dep) $(mySRCdir)/ATL_SetAtomicCount_mut.c
	$(KC) $(KCFLAGS) -o $@ -c $(mySRCdir)/ATL_SetAtomicCount_mut.c
ATL_thread_join.o : $(dep) $(mySRCdir)/ATL_thread_join.c
	$(KC) $(KCFLAGS) -o $@ -c $(mySRCdir)/ATL_thread_join.c
ATL_thread_exit.o : $(dep) $(mySRCdir)/ATL_thread_exit.c
	$(KC) $(KCFLAGS) -o $@ -c $(mySRCdir)/ATL_thread_exit.c
ATL_thread_start.o : $(dep) $(mySRCdir)/ATL_thread_start.c
	$(KC) $(KCFLAGS) -o $@ -c $(mySRCdir)/ATL_thread_start.c
ATL_goparallel.o : $(dep) $(mySRCdir)/ATL_goparallel.c
	$(KC) $(KCFLAGS) -o $@ -c $(mySRCdir)/ATL_goparallel.c
ATL_cond_bcast.o : $(dep) $(mySRCdir)/ATL_cond_bcast.c
	$(KC) $(KCFLAGS) -o $@ -c $(mySRCdir)/ATL_cond_bcast.c
ATL_cond_init.o : $(dep) $(mySRCdir)/ATL_cond_init.c
	$(KC) $(KCFLAGS) -o $@ -c $(mySRCdir)/ATL_cond_init.c
ATL_cond_wait.o : $(dep) $(mySRCdir)/ATL_cond_wait.c
	$(KC) $(KCFLAGS) -o $@ -c $(mySRCdir)/ATL_cond_wait.c
ATL_cond_free.o : $(dep) $(mySRCdir)/ATL_cond_free.c
	$(KC) $(KCFLAGS) -o $@ -c $(mySRCdir)/ATL_cond_free.c
ATL_cond_signal.o : $(dep) $(mySRCdir)/ATL_cond_signal.c
	$(KC) $(KCFLAGS) -o $@ -c $(mySRCdir)/ATL_cond_signal.c
ATL_mutex_init.o : $(dep) $(mySRCdir)/ATL_mutex_init.c
	$(KC) $(KCFLAGS) -o $@ -c $(mySRCdir)/ATL_mutex_init.c
ATL_mutex_lock.o : $(dep) $(mySRCdir)/ATL_mutex_lock.c
	$(KC) $(KCFLAGS) -o $@ -c $(mySRCdir)/ATL_mutex_lock.c
ATL_mutex_unlock.o : $(dep) $(mySRCdir)/ATL_mutex_unlock.c
	$(KC) $(KCFLAGS) -o $@ -c $(mySRCdir)/ATL_mutex_unlock.c
ATL_mutex_trylock.o : $(dep) $(mySRCdir)/ATL_mutex_trylock.c
	$(KC) $(KCFLAGS) -o $@ -c $(mySRCdir)/ATL_mutex_trylock.c
ATL_mutex_free.o : $(dep) $(mySRCdir)/ATL_mutex_free.c
	$(KC) $(KCFLAGS) -o $@ -c $(mySRCdir)/ATL_mutex_free.c
ATL_thread_yield.o : $(dep) $(mySRCdir)/ATL_thread_yield.c
	$(KC) $(KCFLAGS) -o $@ -c $(mySRCdir)/ATL_thread_yield.c
ATL_IsFirstThreadedCall.o : $(dep) $(mySRCdir)/ATL_IsFirstThreadedCall.c
	$(KC) $(KCFLAGS) -o $@ -c $(mySRCdir)/ATL_IsFirstThreadedCall.c
ATL_threadpool.o : $(dep) $(mySRCdir)/ATL_threadpool.c
	$(KC) $(KCFLAGS) -o $@ -c $(mySRCdir)/ATL_threadpool.c
ATL_threadpool_misc.o : $(dep) $(mySRCdir)/ATL_threadpool_misc.c
	$(KC) $(KCFLAGS) -o $@ -c $(mySRCdir)/ATL_threadpool_misc.c
ATL_SetGlobalAtomicCount.o : $(dep) $(mySRCdir)/ATL_SetGlobalAtomicCount.c
	$(KC) $(KCFLAGS) -o $@ -c $(mySRCdir)/ATL_SetGlobalAtomicCount.c
ATL_ResetGlobalAtomicCount.o : $(dep) $(mySRCdir)/ATL_ResetGlobalAtomicCount.c
	$(KC) $(KCFLAGS) -o $@ -c $(mySRCdir)/ATL_ResetGlobalAtomicCount.c
ATL_DecGlobalAtomicCount.o : $(dep) $(mySRCdir)/ATL_DecGlobalAtomicCount.c
	$(KC) $(KCFLAGS) -o $@ -c $(mySRCdir)/ATL_DecGlobalAtomicCount.c
ATL_GetGlobalAtomicCount.o : $(dep) $(mySRCdir)/ATL_GetGlobalAtomicCount.c
	$(KC) $(KCFLAGS) -o $@ -c $(mySRCdir)/ATL_GetGlobalAtomicCount.c
ATL_FreeGlobalAtomicCount.o : $(dep) $(mySRCdir)/ATL_FreeGlobalAtomicCount.c
	$(KC) $(KCFLAGS) -o $@ -c $(mySRCdir)/ATL_FreeGlobalAtomicCount.c
ATL_SetGlobalAtomicCountDown.o : $(dep) $(mySRCdir)/ATL_SetGlobalAtomicCountDown.c
	$(KC) $(KCFLAGS) -o $@ -c $(mySRCdir)/ATL_SetGlobalAtomicCountDown.c
ATL_DecGlobalAtomicCountDown.o : $(dep) $(mySRCdir)/ATL_DecGlobalAtomicCountDown.c
	$(KC) $(KCFLAGS) -o $@ -c $(mySRCdir)/ATL_DecGlobalAtomicCountDown.c
ATL_FreeGlobalAtomicCountDown.o : $(dep) $(mySRCdir)/ATL_FreeGlobalAtomicCountDown.c
	$(KC) $(KCFLAGS) -o $@ -c $(mySRCdir)/ATL_FreeGlobalAtomicCountDown.c
ATL_setmyaffinity.o : $(dep) $(mySRCdir)/ATL_setmyaffinity.c
	$(KC) $(KCFLAGS) -o $@ -c $(mySRCdir)/ATL_setmyaffinity.c
ATL_FreeAtomicCount_mut_mut.o : $(dep) $(mySRCdir)/ATL_FreeAtomicCount_mut.c
	$(KC) $(KCFLAGS) -o $@ -DATL_FreeAtomicCount=ATL_FreeAtomicCount_mut \
               -c $(mySRCdir)/ATL_FreeAtomicCount_mut.c
ATL_ResetAtomicCount_mut_mut.o : $(dep) $(mySRCdir)/ATL_ResetAtomicCount_mut.c
	$(KC) $(KCFLAGS) -o $@ -DATL_ResetAtomicCount=ATL_ResetAtomicCount_mut \
               -c $(mySRCdir)/ATL_ResetAtomicCount_mut.c
ATL_DecAtomicCount_mut_mut.o : $(dep) $(mySRCdir)/ATL_DecAtomicCount_mut.c
	$(KC) $(KCFLAGS) -o $@ -DATL_DecAtomicCount=ATL_DecAtomicCount_mut \
               -c $(mySRCdir)/ATL_DecAtomicCount_mut.c
ATL_SetAtomicCount_mut_mut.o : $(dep) $(mySRCdir)/ATL_SetAtomicCount_mut.c
	$(KC) $(KCFLAGS) -o $@ -DATL_SetAtomicCount=ATL_SetAtomicCount_mut \
               -c $(mySRCdir)/ATL_SetAtomicCount_mut.c

